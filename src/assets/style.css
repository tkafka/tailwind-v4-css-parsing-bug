@import "tailwindcss";

/* @config "../../tailwind.config.js"; */

/* legacy form */
@plugin "@tailwindcss/typography";
/* this should work: https://github.com/tailwindlabs/tailwindcss-typography/issues/372 - but just produces Can't resolve '@tailwindcss/typography' */
/* @import "@tailwindcss/typography"; */

@theme {
  /* Colors */
  --color-primary-50: #ecfdf5;
  --color-primary-100: #d1faea;
  --color-primary-200: #a7f3d5;
  --color-primary-300: #6ee7c0;
  --color-primary-400: #34d5aa;
  --color-primary-500: #14b891;
  --color-primary-600: #0e927a;
  --color-primary-700: #0f7665;
  --color-primary-800: #115e52;
  --color-primary-900: #134e46;

  --color-secondary-50: #f0f9ff;
  --color-secondary-100: #e0f2fe;
  --color-secondary-200: #bae6fd;
  --color-secondary-300: #7dd3fc;
  --color-secondary-400: #38bdf8;
  --color-secondary-500: #0ea5e9;
  --color-secondary-600: #0284c7;
  --color-secondary-700: #0369a1;
  --color-secondary-800: #075985;
  --color-secondary-900: #0c4a6e;
}

/* When defining theme variables that reference other variables, use the inline option. Using the inline option, the utility class will use the theme variable value instead of referencing the actual theme variable. */

/* 
The bug: 
Uncommenting this section will cause production build to miss all the custom styling (primary and secondry colors will be undefined) 

Things I tried:
1. Maybe we can't have two @theme sections? I tried putting both colors above and shadows below into a single `@theme inline` block, but that causes the page to also lose styles in production (but only some of them).
2. Putting both of these sections into a single `@theme` (without inline) also causes the page to lose the formatting.
3. And finally, having a `@theme` section with colors, and `@theme inline` section with shadows referencing the colors works in dev, but causes the production to not have the primary and secondary color variables defined = loss of styling! 
*/
@theme inline {
  --shadow-card: 0 0 1px rgb(from var(--color-secondary-400) r g b / 0.12),
    0 1px 2px rgb(from var(--color-secondary-500) r g b / 0.12),
    0 4px 8px rgb(from var(--color-secondary-500) r g b / 0.12),
    0 8px 16px rgb(from var(--color-secondary-500) r g b / 0.12);
  --shadow-inset: inset 0 1px 2px
      rgb(from var(--color-secondary-500) r g b / 0.08),
    inset 0 2px 4px rgb(var(from --color-secondary-500) r g b / 0.08);
  --shadow-content: 0 0 1px rgb(from var(--color-gray-400) r g b / 0.15),
    0 1px 3px rgb(from var(--color-gray-500) r g b / 0.12),
    0 4px 8px rgb(from var(--color-gray-500) r g b / 0.1);
}
